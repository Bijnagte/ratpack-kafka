apply plugin: 'findbugs'
apply plugin: "pmd"
apply plugin: "checkstyle"
apply plugin: "jacoco"

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

findbugs {
	toolVersion = "3.0.1"
	ignoreFailures = false
	effort = "max"
	reportLevel = "low"
	excludeFilter = file("$rootProject.projectDir/gradle/findbugs/excludeFilter.xml")
	sourceSets = [sourceSets.main]
	reportsDir = file("$project.buildDir/coverage/findbugs")
}

checkstyle {
	configFile = file("$rootProject.projectDir/gradle/checkstyle/checkstyle.xml")
	reportsDir = file("$project.buildDir/coverage/checkstyle")
}

pmd {
	ignoreFailures = false
	reportsDir = file("$project.buildDir/coverage/pmd")
}

tasks.withType(FindBugs) {
	reports {
		xml.enabled = false
		html.enabled = true
	}
}

jacocoTestReport {
	reports {
		xml.enabled true
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = "2.3"
}

configurations.all {
	resolutionStrategy.eachDependency { DependencyResolveDetails details ->
		exclude group: 'log4j', module: 'log4j'
		if (details.requested.name == 'groovy') {
			details.useTarget group: details.requested.group, name: 'groovy-all', version: groovyVersion
		}
		if (details.requested.name == 'groovy-all') {
			details.useVersion groovyVersion
		}
		if (details.requested.name == 'slf4j-log4j12') {
			details.useTarget "org.slf4j:log4j-over-slf4j:${slf4jVersion}"
		}
		if (details.requested.name == 'log4j') {
			details.useTarget "org.slf4j:log4j-over-slf4j:${slf4jVersion}"
		}
	}
}
